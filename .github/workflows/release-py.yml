name: Release Python

on:
  workflow_dispatch:

jobs:
  release-py:
    name: Bump minor and publish Python to PyPI
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip

      - name: Configure git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Bump minor version in pyproject.toml
        id: bump
        run: |
          NEW_VERSION=$(python - << 'PY'
          import re, sys, pathlib
          p = pathlib.Path('clients/python/pyproject.toml')
          s = p.read_text(encoding='utf-8')
          pat = re.compile(r'(?m)^version\s*=\s*"(\d+)\.(\d+)\.(\d+)"')
          m = pat.search(s)
          if not m:
              print('Version not found in pyproject.toml', file=sys.stderr)
              sys.exit(1)
          major, minor, patch = map(int, m.groups())
          minor += 1
          patch = 0
          new_v = f"{major}.{minor}.{patch}"
          s2 = pat.sub(f'version = "{new_v}"', s, count=1)
          p.write_text(s2, encoding='utf-8')
          print(new_v)
          PY
          )
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit version bump
        run: |
          git add clients/python/pyproject.toml
          git commit -m "chore(release): py v${{ steps.bump.outputs.version }}" || echo "No changes to commit"

      - name: Push changes
        run: git push

      - name: Create and push git tag
        run: |
          TAG="py-v${{ steps.bump.outputs.version }}"
          git tag -a "$TAG" -m "Release Python ${{ steps.bump.outputs.version }}"
          git push origin "$TAG"

      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          pip install build
        working-directory: clients/python

      - name: Build sdist and wheel
        run: python -m build
        working-directory: clients/python

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: clients/python/dist
          password: ${{ secrets.PYPI_API_TOKEN }}

# Usage:
# - Run this workflow manually from the Actions tab to perform a Python minor release and publish.
# - It bumps clients/python version (minor), commits to default branch, builds, and publishes to PyPI.
# - Requires repository secret PYPI_API_TOKEN with publish rights (or configure Trusted Publishers).
