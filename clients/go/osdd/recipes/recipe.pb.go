// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.3
// source: osdd/recipes/recipe.proto

package recipes

import (
	osdd "github.com/opensdd/osdd-api/clients/go/osdd"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Recipe struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Prefetch *osdd.Prefetch         `protobuf:"bytes,1,opt,name=prefetch,proto3,oneof"`
	xxx_hidden_Context  *Context               `protobuf:"bytes,2,opt,name=context,proto3,oneof"`
	xxx_hidden_Ide      *Ide                   `protobuf:"bytes,3,opt,name=ide,proto3,oneof"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Recipe) Reset() {
	*x = Recipe{}
	mi := &file_osdd_recipes_recipe_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Recipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recipe) ProtoMessage() {}

func (x *Recipe) ProtoReflect() protoreflect.Message {
	mi := &file_osdd_recipes_recipe_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Recipe) GetPrefetch() *osdd.Prefetch {
	if x != nil {
		return x.xxx_hidden_Prefetch
	}
	return nil
}

func (x *Recipe) GetContext() *Context {
	if x != nil {
		return x.xxx_hidden_Context
	}
	return nil
}

func (x *Recipe) GetIde() *Ide {
	if x != nil {
		return x.xxx_hidden_Ide
	}
	return nil
}

func (x *Recipe) SetPrefetch(v *osdd.Prefetch) {
	x.xxx_hidden_Prefetch = v
}

func (x *Recipe) SetContext(v *Context) {
	x.xxx_hidden_Context = v
}

func (x *Recipe) SetIde(v *Ide) {
	x.xxx_hidden_Ide = v
}

func (x *Recipe) HasPrefetch() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Prefetch != nil
}

func (x *Recipe) HasContext() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Context != nil
}

func (x *Recipe) HasIde() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Ide != nil
}

func (x *Recipe) ClearPrefetch() {
	x.xxx_hidden_Prefetch = nil
}

func (x *Recipe) ClearContext() {
	x.xxx_hidden_Context = nil
}

func (x *Recipe) ClearIde() {
	x.xxx_hidden_Ide = nil
}

type Recipe_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Prefetch *osdd.Prefetch
	Context  *Context
	Ide      *Ide
}

func (b0 Recipe_builder) Build() *Recipe {
	m0 := &Recipe{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Prefetch = b.Prefetch
	x.xxx_hidden_Context = b.Context
	x.xxx_hidden_Ide = b.Ide
	return m0
}

type ExecutableRecipe struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Recipe     *Recipe                `protobuf:"bytes,1,opt,name=recipe,proto3"`
	xxx_hidden_EntryPoint *EntryPoint            `protobuf:"bytes,2,opt,name=entry_point,json=entryPoint,proto3"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ExecutableRecipe) Reset() {
	*x = ExecutableRecipe{}
	mi := &file_osdd_recipes_recipe_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutableRecipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutableRecipe) ProtoMessage() {}

func (x *ExecutableRecipe) ProtoReflect() protoreflect.Message {
	mi := &file_osdd_recipes_recipe_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecutableRecipe) GetRecipe() *Recipe {
	if x != nil {
		return x.xxx_hidden_Recipe
	}
	return nil
}

func (x *ExecutableRecipe) GetEntryPoint() *EntryPoint {
	if x != nil {
		return x.xxx_hidden_EntryPoint
	}
	return nil
}

func (x *ExecutableRecipe) SetRecipe(v *Recipe) {
	x.xxx_hidden_Recipe = v
}

func (x *ExecutableRecipe) SetEntryPoint(v *EntryPoint) {
	x.xxx_hidden_EntryPoint = v
}

func (x *ExecutableRecipe) HasRecipe() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Recipe != nil
}

func (x *ExecutableRecipe) HasEntryPoint() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_EntryPoint != nil
}

func (x *ExecutableRecipe) ClearRecipe() {
	x.xxx_hidden_Recipe = nil
}

func (x *ExecutableRecipe) ClearEntryPoint() {
	x.xxx_hidden_EntryPoint = nil
}

type ExecutableRecipe_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Recipe     *Recipe
	EntryPoint *EntryPoint
}

func (b0 ExecutableRecipe_builder) Build() *ExecutableRecipe {
	m0 := &ExecutableRecipe{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Recipe = b.Recipe
	x.xxx_hidden_EntryPoint = b.EntryPoint
	return m0
}

type EntryPoint struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_IdeType string                 `protobuf:"bytes,1,opt,name=ide_type,json=ideType,proto3"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *EntryPoint) Reset() {
	*x = EntryPoint{}
	mi := &file_osdd_recipes_recipe_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntryPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntryPoint) ProtoMessage() {}

func (x *EntryPoint) ProtoReflect() protoreflect.Message {
	mi := &file_osdd_recipes_recipe_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *EntryPoint) GetIdeType() string {
	if x != nil {
		return x.xxx_hidden_IdeType
	}
	return ""
}

func (x *EntryPoint) SetIdeType(v string) {
	x.xxx_hidden_IdeType = v
}

type EntryPoint_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	IdeType string
}

func (b0 EntryPoint_builder) Build() *EntryPoint {
	m0 := &EntryPoint{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_IdeType = b.IdeType
	return m0
}

var File_osdd_recipes_recipe_proto protoreflect.FileDescriptor

const file_osdd_recipes_recipe_proto_rawDesc = "" +
	"\n" +
	"\x19osdd/recipes/recipe.proto\x12\x13osdd.recipes.recipe\x1a\x1aosdd/recipes/context.proto\x1a\x16osdd/recipes/ide.proto\x1a\x12osdd/content.proto\"\xce\x01\n" +
	"\x06Recipe\x127\n" +
	"\bprefetch\x18\x01 \x01(\v2\x16.osdd.content.PrefetchH\x00R\bprefetch\x88\x01\x01\x12<\n" +
	"\acontext\x18\x02 \x01(\v2\x1d.osdd.recipes.context.ContextH\x01R\acontext\x88\x01\x01\x12,\n" +
	"\x03ide\x18\x03 \x01(\v2\x15.osdd.recipes.ide.IdeH\x02R\x03ide\x88\x01\x01B\v\n" +
	"\t_prefetchB\n" +
	"\n" +
	"\b_contextB\x06\n" +
	"\x04_ide\"\x89\x01\n" +
	"\x10ExecutableRecipe\x123\n" +
	"\x06recipe\x18\x01 \x01(\v2\x1b.osdd.recipes.recipe.RecipeR\x06recipe\x12@\n" +
	"\ventry_point\x18\x02 \x01(\v2\x1f.osdd.recipes.recipe.EntryPointR\n" +
	"entryPoint\"'\n" +
	"\n" +
	"EntryPoint\x12\x19\n" +
	"\bide_type\x18\x01 \x01(\tR\aideTypeB5Z3github.com/opensdd/osdd-api/clients/go/osdd/recipesb\x06proto3"

var file_osdd_recipes_recipe_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_osdd_recipes_recipe_proto_goTypes = []any{
	(*Recipe)(nil),           // 0: osdd.recipes.recipe.Recipe
	(*ExecutableRecipe)(nil), // 1: osdd.recipes.recipe.ExecutableRecipe
	(*EntryPoint)(nil),       // 2: osdd.recipes.recipe.EntryPoint
	(*osdd.Prefetch)(nil),    // 3: osdd.content.Prefetch
	(*Context)(nil),          // 4: osdd.recipes.context.Context
	(*Ide)(nil),              // 5: osdd.recipes.ide.Ide
}
var file_osdd_recipes_recipe_proto_depIdxs = []int32{
	3, // 0: osdd.recipes.recipe.Recipe.prefetch:type_name -> osdd.content.Prefetch
	4, // 1: osdd.recipes.recipe.Recipe.context:type_name -> osdd.recipes.context.Context
	5, // 2: osdd.recipes.recipe.Recipe.ide:type_name -> osdd.recipes.ide.Ide
	0, // 3: osdd.recipes.recipe.ExecutableRecipe.recipe:type_name -> osdd.recipes.recipe.Recipe
	2, // 4: osdd.recipes.recipe.ExecutableRecipe.entry_point:type_name -> osdd.recipes.recipe.EntryPoint
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_osdd_recipes_recipe_proto_init() }
func file_osdd_recipes_recipe_proto_init() {
	if File_osdd_recipes_recipe_proto != nil {
		return
	}
	file_osdd_recipes_context_proto_init()
	file_osdd_recipes_ide_proto_init()
	file_osdd_recipes_recipe_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_osdd_recipes_recipe_proto_rawDesc), len(file_osdd_recipes_recipe_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_osdd_recipes_recipe_proto_goTypes,
		DependencyIndexes: file_osdd_recipes_recipe_proto_depIdxs,
		MessageInfos:      file_osdd_recipes_recipe_proto_msgTypes,
	}.Build()
	File_osdd_recipes_recipe_proto = out.File
	file_osdd_recipes_recipe_proto_goTypes = nil
	file_osdd_recipes_recipe_proto_depIdxs = nil
}
